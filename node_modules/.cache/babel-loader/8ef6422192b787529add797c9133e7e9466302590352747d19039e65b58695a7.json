{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Terminator\\\\Desktop\\\\auth-frontend\\\\src\\\\TimerComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimerComponent() {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setMessage('Прошло 5 секунд!');\n    }, 5000);\n\n    // Функция уборки: отменяем таймер, если компонент размонтируется до истечения 5 секунд\n    return () => {\n      clearTimeout(timer);\n      console.log('Таймер был очищен перед размонтированием');\n    };\n  }, []); // Пустой массив зависимостей означает, что useEffect запускается только при монтировании компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerComponent, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = TimerComponent;\nexport default TimerComponent;\nvar _c;\n$RefreshReg$(_c, \"TimerComponent\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TimerComponent","_s","message","setMessage","timer","setTimeout","clearTimeout","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Terminator/Desktop/auth-frontend/src/TimerComponent.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction TimerComponent() {\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setMessage('Прошло 5 секунд!');\r\n    }, 5000);\r\n\r\n    // Функция уборки: отменяем таймер, если компонент размонтируется до истечения 5 секунд\r\n    return () => {\r\n      clearTimeout(timer);\r\n      console.log('Таймер был очищен перед размонтированием');\r\n    };\r\n  }, []); // Пустой массив зависимостей означает, что useEffect запускается только при монтировании компонента\r\n\r\n  return (\r\n    <div>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,UAAU,CAAC,kBAAkB,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACXG,YAAY,CAACF,KAAK,CAAC;MACnBG,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAAU,QAAA,EAAIP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACZ,EAAA,CApBQD,cAAc;AAAAc,EAAA,GAAdd,cAAc;AAsBvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}