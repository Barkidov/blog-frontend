{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Terminator\\\\Desktop\\\\auth-frontend\\\\src\\\\CounterComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterComponent = () => {\n  _s();\n  // Состояние для хранения количества кликов\n  const [count, setCount] = useState(0);\n\n  //   // useEffect срабатывает при каждом изменении count\n  useEffect(() => {\n    console.log(`Count изменился: ${count}`);\n\n    // Возвращаем функцию очистки, которая срабатывает при размонтировании или перед повторным вызовом\n    return () => {\n      console.log(\"Компонент будет обновлен или размонтирован.\");\n    };\n  }, [count]);\n\n  // useEffect, который срабатывает только при монтировании компонента\n  //   useEffect(() => {\n  //     console.log(\"Компонент смонтирован.\");\n\n  //     // Возвращаем функцию, которая сработает при размонтировании компонента\n  //     return () => {\n  //       console.log(\"Компонент размонтирован.\");\n  //     };\n  //   }, []);\n\n  // Функция для увеличения счетчика\n  const incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  // Функция для сброса счетчика\n  const resetCount = () => {\n    setCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Counter Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043A\\u043B\\u0438\\u043A\\u043E\\u0432: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementCount,\n      children: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCount,\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterComponent, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = CounterComponent;\nexport default CounterComponent;\nvar _c;\n$RefreshReg$(_c, \"CounterComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CounterComponent","_s","count","setCount","console","log","incrementCount","resetCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Terminator/Desktop/auth-frontend/src/CounterComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CounterComponent: React.FC = () => {\r\n  // Состояние для хранения количества кликов\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n//   // useEffect срабатывает при каждом изменении count\r\n  useEffect(() => {\r\n    console.log(`Count изменился: ${count}`);\r\n\r\n    // Возвращаем функцию очистки, которая срабатывает при размонтировании или перед повторным вызовом\r\n    return () => {\r\n      console.log(\"Компонент будет обновлен или размонтирован.\");\r\n    };\r\n  }, [count]);\r\n\r\n  // useEffect, который срабатывает только при монтировании компонента\r\n//   useEffect(() => {\r\n//     console.log(\"Компонент смонтирован.\");\r\n\r\n//     // Возвращаем функцию, которая сработает при размонтировании компонента\r\n//     return () => {\r\n//       console.log(\"Компонент размонтирован.\");\r\n//     };\r\n//   }, []);\r\n\r\n  // Функция для увеличения счетчика\r\n  const incrementCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  // Функция для сброса счетчика\r\n  const resetCount = () => {\r\n    setCount(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Counter Component</h2>\r\n      <p>Количество кликов: {count}</p>\r\n      <button onClick={incrementCount}>Увеличить</button>\r\n      <button onClick={resetCount}>Сбросить</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounterComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,CAAC,CAAC;;EAE/C;EACEC,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAC,oBAAoBH,KAAK,EAAE,CAAC;;IAExC;IACA,OAAO,MAAM;MACXE,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;;EAEX;EACF;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEE;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBJ,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACEJ,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bb,OAAA;MAAAS,QAAA,GAAG,qGAAmB,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCb,OAAA;MAAQc,OAAO,EAAEP,cAAe;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDb,OAAA;MAAQc,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACX,EAAA,CA1CID,gBAA0B;AAAAc,EAAA,GAA1Bd,gBAA0B;AA4ChC,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}