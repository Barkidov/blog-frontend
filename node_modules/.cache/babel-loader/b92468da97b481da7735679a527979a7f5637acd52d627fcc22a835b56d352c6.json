{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Terminator\\\\Desktop\\\\auth-frontend\\\\src\\\\myPosts\\\\MyPosts.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport style from './myPosts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  // Загрузка постов при монтировании компонента\n  // useEffect(() => {\n  const fetchPosts = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"No token found\");\n      const response = await axios.get(\"http://localhost:5000/api/posts\", {\n        headers: {\n          'x-auth-token': token // Обновите сюда\n        }\n      });\n      setPosts(response.data);\n    } catch (err) {\n      console.error(\"Error fetching posts:\", err);\n    }\n  };\n  fetchPosts();\n  // }, []);\n\n  // Обработчик отправки формы\n  const handleCreatePost = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:5000/api/posts/create\", formData, {\n        headers: {\n          'x-auth-token': token // Обновите сюда          \"Content-Type\": \"multipart/form-data\",\n        }\n      });\n      setPosts([response.data, ...posts]);\n      setContent(\"\");\n      setImage(null);\n    } catch (err) {\n      console.error(\"Error creating post:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u043E\\u0438 \\u041F\\u043E\\u0441\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpeg\",\n          onChange: e => {\n            var _e$target$files;\n            return setImage(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.post,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000${post.imageUrl}`,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPosts, \"Ml4i4ostpuvU/sOfUSM4DnQ7ZwI=\");\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["useState","axios","style","jsxDEV","_jsxDEV","MyPosts","_s","posts","setPosts","content","setContent","image","setImage","fetchPosts","token","localStorage","getItem","Error","response","get","headers","data","err","console","error","handleCreatePost","e","preventDefault","formData","FormData","append","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","accept","_e$target$files","files","map","className","imageUrl","src","alt","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/Terminator/Desktop/auth-frontend/src/myPosts/MyPosts.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport style from './myPosts.module.css';\r\n\r\ninterface Post {\r\n  _id: string;\r\n  content: string;\r\n  imageUrl?: string;\r\n  createdAt: string;\r\n}\r\n\r\nconst MyPosts: React.FC = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [image, setImage] = useState<File | null>(null);\r\n\r\n  // Загрузка постов при монтировании компонента\r\n  // useEffect(() => {\r\n    const fetchPosts = async () => {\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          if (!token) throw new Error(\"No token found\");\r\n      \r\n          const response = await axios.get(\"http://localhost:5000/api/posts\", {\r\n            headers: {\r\n              'x-auth-token': token, // Обновите сюда\r\n            },\r\n          });\r\n      \r\n          setPosts(response.data);\r\n        } catch (err) {\r\n          console.error(\"Error fetching posts:\", err);\r\n        }\r\n      };\r\n\r\n    fetchPosts();\r\n  // }, []);\r\n\r\n  // Обработчик отправки формы\r\n  const handleCreatePost = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"content\", content);\r\n    if (image) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await axios.post(\"http://localhost:5000/api/posts/create\", formData, {\r\n        headers: {\r\n            'x-auth-token': token, // Обновите сюда          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      setPosts([response.data, ...posts]);\r\n      setContent(\"\");\r\n      setImage(null);\r\n    } catch (err) {\r\n      console.error(\"Error creating post:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Мои Посты</h2>\r\n      <form onSubmit={handleCreatePost}>\r\n        <div>\r\n          <textarea\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            placeholder=\"Введите текст поста\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <input type=\"file\" accept=\"image/jpeg\" onChange={(e) => setImage(e.target.files?.[0] || null)} />\r\n        </div>\r\n        <button type=\"submit\">Создать пост</button>\r\n      </form>\r\n\r\n      <div>\r\n        {posts.map(post => (\r\n          <div key={post._id} className={style.post}>\r\n            <p>{post.content}</p>\r\n            {post.imageUrl && <img src={`http://localhost:5000${post.imageUrl}`} alt=\"Post\" />}\r\n            <span>{new Date(post.createdAt).toLocaleString()}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}